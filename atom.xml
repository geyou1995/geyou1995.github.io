<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我就是胖着玩玩的</title>
  
  <subtitle>坚持产生意外✊</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-02T11:23:23.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Youga</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>excel读写及Zip打包下载</title>
    <link href="http://yoursite.com/2019/01/02/excel%E8%AF%BB%E5%86%99%E5%8F%8AZIp%E6%89%93%E5%8C%85%E4%B8%8B%E8%BD%BD/"/>
    <id>http://yoursite.com/2019/01/02/excel读写及ZIp打包下载/</id>
    <published>2019-01-02T09:41:55.000Z</published>
    <updated>2019-01-02T11:23:23.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>针对2019个税专项附加扣除做的需求：帮助Hr快速收集员工申报信息，及处理信息，由员工填写表单提交信息，对信息进行处理写入到个税局提供的个税专项附加扣除信息excel模版，最后ZIP打包导出.</p><h2 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h2><p>首先需要收集处理员工数据，将excel模版放在服务器上，导出时在服务器上创建一个临时文件夹，读取模版excel文件,将数据循环写入excel模版中(一个员工对应一张excel),将写好数据的excel文件流依次写入该文件夹中，接着打包下载该文件夹，最后删除这个临时文件夹.</p><ul><li>将excel模版放在服务器上<br>将个税局提供的模版放到服务器上，用于读取</li><li>收集处理导出的数据<br>数据是map形式，userId-data,一个员工对应自己的数据</li><li>在服务器上创建一个临时文件夹<br>打包时需要一个文件夹存放一个个excel文件</li><li>将数据写入<br>循环数据，获取excel模版，创建WorkBook写入数据</li><li>处理excel<br>将写好的excel文件命名并写到临时文件夹去</li><li>zip打包下载<br>写完所有数据后，对该临时文件夹打包导出</li><li>删除文件<br>导出后删除临时文件夹</li></ul><h2 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h2><h5 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">public static void writeDataToModelExcel(HttpServletRequest request, HttpServletResponse response, Map&lt;String, SalaryTaxExportVO&gt; dataMap, String corpId, String opUserId) throws Exception &#123;</span><br><span class="line">final String folderPath = PATH + FILE_NAME_SPECIAL + LINE + corpId + LINE + opUserId + LINE + UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);</span><br><span class="line">try &#123;</span><br><span class="line">//创建唯一临时文件夹路径</span><br><span class="line">//创建扣件单位文件路径集合</span><br><span class="line">List&lt;String&gt; companyPathList = Lists.newArrayList();</span><br><span class="line">//遍历数据写入excel</span><br><span class="line">for (Map.Entry&lt;String, SalaryTaxExportVO&gt; entry : dataMap.entrySet()) &#123;</span><br><span class="line">//获取模版文件excel</span><br><span class="line">ClassPathResource classPathResource = new ClassPathResource(&quot;xls/latestSalaryTaxDeductTemplate.xls&quot;);</span><br><span class="line">//LOGGER.warn(&quot;qqqqq&quot; + Cipher.getMaxAllowedKeyLength(&quot;AES&quot;));</span><br><span class="line">Workbook wb = WorkbookFactory.create(classPathResource.getInputStream());</span><br><span class="line">//3.获取数据</span><br><span class="line">SalaryTaxExportVO salaryTaxExportVO = entry.getValue();</span><br><span class="line">String userId = salaryTaxExportVO.getUserId();</span><br><span class="line">//将数据写到excel模版中</span><br><span class="line">writeDataToTemplate(salaryTaxExportVO, wb);</span><br><span class="line">//将文件写入服务器(创建临时文件夹)</span><br><span class="line">File newFile = new File(folderPath);</span><br><span class="line">if (!newFile.exists()) &#123;</span><br><span class="line">boolean mkdirs = newFile.mkdirs();</span><br><span class="line">if (!mkdirs) &#123;</span><br><span class="line">throw new ExcelException(&quot;文件路径生成失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//获取扣缴单位名称 地区 身份证</span><br><span class="line">String companyName = salaryTaxExportVO.getCompanyName();</span><br><span class="line">if(StringUtils.isBlank(companyName))&#123;</span><br><span class="line">companyName = &quot;无扣缴单位&quot;;</span><br><span class="line">&#125;</span><br><span class="line">String area = salaryTaxExportVO.getArea();</span><br><span class="line">String certNo = salaryTaxExportVO.getCertNo();</span><br><span class="line">//创建扣缴单位文件路径</span><br><span class="line">String companyPath = folderPath + SYMBOL + companyName + SYMBOL;</span><br><span class="line">if (!companyPathList.contains(companyPath)) &#123;</span><br><span class="line">File file = new File(companyPath);</span><br><span class="line">if (!file.exists()) &#123;</span><br><span class="line">file.mkdirs();</span><br><span class="line">&#125;</span><br><span class="line">companyPathList.add(companyPath);</span><br><span class="line">&#125;</span><br><span class="line">// 向扣缴单位文件夹写文件 地区+扣缴单位名称+个人身份号码</span><br><span class="line">List&lt;String&gt; names = Lists.newArrayList();</span><br><span class="line">names.add(area);</span><br><span class="line">names.add(companyName);</span><br><span class="line">names.add(certNo);</span><br><span class="line">names.add(&quot;.xls&quot;);</span><br><span class="line">String fileName = StringUtils.join(names.stream().filter(Objects::nonNull).collect(Collectors.toList()), &quot;&quot;);</span><br><span class="line">FileOutputStream out = new FileOutputStream(companyPath + fileName);</span><br><span class="line">wb.write(out);</span><br><span class="line">wb.close();</span><br><span class="line">&#125;</span><br><span class="line">// 获取zip文件名称 （余杭、建德）+扣缴单位名称</span><br><span class="line">String folderName = &quot;个人所得税专项附加扣除申报文件.zip&quot;;</span><br><span class="line">//打包下载文件</span><br><span class="line">packToDownload(request, response, folderName, folderPath);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">LOGGER.error(&quot;writeDataToModelExcel error, corpId=&#123;&#125;, userId=&#123;&#125;.&quot;, corpId, opUserId,e);</span><br><span class="line">throw e;</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">// 删除文件</span><br><span class="line">delFolder(folderPath);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="创建zip包"><a href="#创建zip包" class="headerlink" title="创建zip包"></a>创建zip包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 创建ZIP文件</span><br><span class="line">*</span><br><span class="line">* @param folderPath 文件或文件夹路径</span><br><span class="line">*/</span><br><span class="line">private static void packToDownload(HttpServletRequest request, HttpServletResponse response, String folderName, String folderPath) &#123;</span><br><span class="line">try (</span><br><span class="line">ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line">ZipOutputStream zos = new ZipOutputStream(outputStream)) &#123;</span><br><span class="line">//设置响应头,必须在写文件前</span><br><span class="line">DownloadUtil.setFileDownloadHeader(request, response, folderName);</span><br><span class="line">writeZip(new File(folderPath), &quot;&quot;, zos);</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">LOGGER.error(&quot;TaxDeductExcelUtil packToDownload 创建ZIP文件失败&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">*</span><br><span class="line">*写文件</span><br><span class="line">*/</span><br><span class="line">private static void writeZip(File file, String parentPath, ZipOutputStream zos) &#123;</span><br><span class="line">if (file.exists()) &#123;</span><br><span class="line">if (file.isDirectory()) &#123;</span><br><span class="line">//处理文件夹</span><br><span class="line">String filename = file.getName();</span><br><span class="line">if (filename.contains(FILE_NAME_SPECIAL))&#123;</span><br><span class="line">filename = &quot;个人所得税专项附加扣除申报文件&quot;;</span><br><span class="line">&#125;</span><br><span class="line">parentPath += filename + File.separator;</span><br><span class="line">File[] files = file.listFiles();</span><br><span class="line">if (files.length != 0) &#123;</span><br><span class="line">for (File f : files) &#123;</span><br><span class="line">writeZip(f, parentPath, zos);</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;       //空目录则创建当前目录</span><br><span class="line">try &#123;</span><br><span class="line">zos.putNextEntry(new ZipEntry(parentPath));</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">LOGGER.error(&quot;TaxDeductExcelUtil packToDownload 创建ZIP文件失败&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">FileInputStream fis = null;</span><br><span class="line">try &#123;</span><br><span class="line">fis = new FileInputStream(file);</span><br><span class="line">ZipEntry ze = new ZipEntry(parentPath + file.getName());</span><br><span class="line">zos.putNextEntry(ze);</span><br><span class="line">byte[] content = new byte[1024];</span><br><span class="line">int len;</span><br><span class="line">while ((len = fis.read(content)) != -1) &#123;</span><br><span class="line">zos.write(content, 0, len);</span><br><span class="line">zos.flush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">LOGGER.error(&quot;TaxDeductExcelUtil packToDownload 创建ZIP文件失败&quot;, e);</span><br><span class="line">&#125; finally &#123;</span><br><span class="line">try &#123;</span><br><span class="line">if (fis != null) &#123;</span><br><span class="line">fis.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">LOGGER.error(&quot;TaxDeductExcelUtil packToDownload 创建ZIP文件失败&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line">*</span><br><span class="line">*设置响应头</span><br><span class="line">*/</span><br><span class="line">public static void setFileDownloadHeader(HttpServletRequest request, HttpServletResponse response, String fileName) &#123;</span><br><span class="line">final String userAgent = request.getHeader(&quot;User-Agent&quot;);</span><br><span class="line">try &#123;</span><br><span class="line">String finalFileName = getEncodeFileName(userAgent, fileName);</span><br><span class="line">response.setContentType(&quot;application/octet-stream&quot;);</span><br><span class="line">response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment; &quot; + finalFileName);</span><br><span class="line">&#125; catch (Exception ignored) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 删除文件</span><br><span class="line">*</span><br><span class="line">* @param folderPath</span><br><span class="line">* @return</span><br><span class="line">*/</span><br><span class="line">private static void delFolder(String folderPath) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">//删除完里面所有内容</span><br><span class="line">delAllFile(folderPath);</span><br><span class="line">java.io.File myFilePath = new java.io.File(folderPath);</span><br><span class="line">//删除空文件夹</span><br><span class="line">myFilePath.delete();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line">LOGGER.error(&quot;TaxDeductExcelUtil delFolder 删除文件失败&quot;, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private static boolean delAllFile(String path) &#123;</span><br><span class="line">boolean flag = false;</span><br><span class="line">File file = new File(path);</span><br><span class="line">if (!file.exists()) &#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">if (!file.isDirectory()) &#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">String[] tempList = file.list();</span><br><span class="line">if (ArrayUtils.isEmpty(tempList)) &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">for (String aTempList : tempList) &#123;</span><br><span class="line">File temp;</span><br><span class="line">if (path.endsWith(File.separator)) &#123;</span><br><span class="line">temp = new File(path + aTempList);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">temp = new File(path + File.separator + aTempList);</span><br><span class="line">&#125;</span><br><span class="line">if (temp.isFile()) &#123;</span><br><span class="line">temp.delete();</span><br><span class="line">&#125;</span><br><span class="line">if (temp.isDirectory()) &#123;</span><br><span class="line">//先删除文件夹里面的文件</span><br><span class="line">delAllFile(path + &quot;/&quot; + aTempList);</span><br><span class="line">//再删除空文件夹</span><br><span class="line">delFolder(path + &quot;/&quot; + aTempList);</span><br><span class="line">flag = true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ol><li>创建临时文件时，一定要保证文件名唯一（防止同一时间并发，导出串数据），这里采用了corpId-userId-UUID</li><li>后缀.xls表示07之前的版本 使用HSSFWookBook，.xlsx是07之后的版本XSSFWookBook，这里使用POI兼容的方式，自动帮你识别：Workbook wb = WorkbookFactory.create(classPathResource.getInputStream())；</li><li>在循环中每写完一个excel都要关流 wb.close() — 因为是多个excel</li><li>最后一定要删除服务器上的文件（防止文件堆积占用内存）</li><li>HSSF对excel函数方法较多不支持导致导出的文件一些版本的excel内容不可读，不过用WPS可以正常打开</li><li>设置响应头,必须在写文件前</li><li>JCE策略文件-读取excel加密文件时，jdk版本需要在”1.8.0_161以上，否则需要安装第三方jar包（US_export_policy.jar , local_policy.jar　）</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>maven基本知识</title>
    <link href="http://yoursite.com/2018/12/23/maven%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2018/12/23/maven基础知识/</id>
    <published>2018-12-22T23:49:55.000Z</published>
    <updated>2018-12-24T13:20:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>maven是项目管理工具，主要有两个特性: 依赖管理和一键构建.</p><h2 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h2><h5 id="依赖管理就是对jar包的管理过程"><a href="#依赖管理就是对jar包的管理过程" class="headerlink" title="依赖管理就是对jar包的管理过程."></a>依赖管理就是对jar包的管理过程.</h5><p>传统的工程项目是直接放置jar包，maven工程真正的jar包在仓库中放置，项目中只放置jar包的坐标(pom.xml). </p><h5 id="仓库分三类-："><a href="#仓库分三类-：" class="headerlink" title="仓库分三类 ："></a>仓库分三类 ：</h5><p>本地仓库,远程仓库【私服】,中央仓库.<br>本地仓库是我们运行项目第一步必须本地仓库有对应的坐标，如果没有默认自动去中央仓库下载，在公司中会先从远程仓库下载，远程仓库没有，会从中央仓库下载或本地上传.<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;project ….&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">&lt;groupId&gt;com.dintalent.salary&lt;/groupId&gt; </span><br><span class="line">&lt;artifactId&gt;mavenDemo&lt;/artifactId&gt; </span><br><span class="line">&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; </span><br><span class="line">&lt;packaging&gt;jar&lt;/packaging&gt; </span><br><span class="line">&lt;name&gt;mavenDemo&lt;/name&gt;  </span><br><span class="line">&lt;url&gt;http://maven.apache.org&lt;/url&gt;  </span><br><span class="line">&lt;dependencies&gt;  </span><br><span class="line">&lt;dependency&gt;   </span><br><span class="line">&lt;groupId&gt;junit&lt;/groupId&gt; </span><br><span class="line">&lt;artifactId&gt;junit&lt;/artifactId&gt;   </span><br><span class="line">&lt;version&gt;3.8.1&lt;/version&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure></p><ul><li>groupId : 标识公司,组织,团体(taobao.com对应com.taobao,apche.org对应org.apache)</li><li>artifactId ：工程名</li><li>version :版本号 （SNAPSHOT表示测试版本）</li><li>packaging ： 打成什么包(jar,war,pom)</li><li>scope : 依赖范围（例如test 表示对测试代码classpath有效）</li></ul><h2 id="一键构建"><a href="#一键构建" class="headerlink" title="一键构建"></a>一键构建</h2><p>一键构建就是我们使用maven集成的tomcat插件对项目进行编译，测试，打包，安装等操作.</p><ul><li>清理生命周期：clean</li><li>默认生命周期：compile(编译),test(测试),package(打包),install(安装).</li></ul><h2 id="jar包冲突问题"><a href="#jar包冲突问题" class="headerlink" title="jar包冲突问题"></a>jar包冲突问题</h2><p>简单理解就是应用程序依赖的同一个jar包出现了多个不同的版本，选择了错误的版本导致JVM加载不到类或加载了错误版本的类.</p><ul><li>直接依赖： A项目导入了B包，A直接依赖B包</li><li>传递依赖： A项目导入了B包，B包直接依赖C包，最终A可以使用C</li></ul><h5 id="解决jar冲突的三个原则"><a href="#解决jar冲突的三个原则" class="headerlink" title="解决jar冲突的三个原则"></a>解决jar冲突的三个原则</h5><ol><li>第一声明原则：哪个jar包的坐标靠上，这个jar包就是第一声明的包，最终进入项目的就是它.</li><li>路径近者优先原则：直接依赖路径比传递依赖近，进入项目的就是路径近的.</li><li>直接排除法： 使用<exlusions></exlusions>标签直接排除某个包的依赖包.</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>自定义注解简单使用</title>
    <link href="http://yoursite.com/2018/10/21/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/10/21/自定义注解使用/</id>
    <published>2018-10-20T23:03:55.000Z</published>
    <updated>2018-10-29T12:34:09.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>需要对一些用户行为的接口进行日志埋点统计,如果在业务代码写的话代码比较杂乱,而且之后改动也不方便,于是便决定使用自定义注解，使用spring的切面注解@Aspect.</p><h2 id="注解的定义"><a href="#注解的定义" class="headerlink" title="注解的定义"></a>注解的定义</h2><p>Java文件叫做Annotation，用@interface表示。</p><h2 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h2><p>@interface上面按需要注解上一些东西，包括@Retention、@Target、@Document、@Inherited四种.</p><ul><li>@Target 表示该注解可以用于什么地方</li><li>@Retention 注解的声明周期，用于定义注解的存活阶段，可以存活在源码级别、编译级别(字节码级别)、运行时级别</li><li>@Document 将注解包含在Javadoc中</li><li>@Inherited 允许子类继承父类中的注解</li></ul><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><p> 基于注解的知识，自己创建一个注解</p><ul><li>实现过程<br>首先创建一个自定义注解 -&gt; 采用spring的@Aspect创建一个切面类,在这个切中获取信息并且打印日志 -&gt; 在记录的接口上写上注解</li><li>简单示例代码<br><img src="https://github.com/geyou1995/picture/blob/master/Annotations1.png?raw=true" alt=""><br><img src="https://github.com/geyou1995/picture/blob/master/Annotations2.png?raw=true" alt=""><br><img src="https://github.com/geyou1995/picture/blob/master/Annotations3.png?raw=true" alt=""><br><img src="https://github.com/geyou1995/picture/blob/master/Annotations4.png?raw=true" alt=""><br><img src="https://github.com/geyou1995/picture/blob/master/Annotations5.png?raw=true" alt=""><blockquote><p>参考：项目中的操作日志的方法</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Java8新特性Lambda和Stream</title>
    <link href="http://yoursite.com/2018/09/18/Java8%E6%96%B0%E7%89%B9%E6%80%A7Lambda%E5%92%8CStream/"/>
    <id>http://yoursite.com/2018/09/18/Java8新特性Lambda和Stream/</id>
    <published>2018-09-18T01:10:55.000Z</published>
    <updated>2018-10-29T12:20:41.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>目前项目应用的是Java 1.8版本,在项目中看到其他小伙伴使用了奇特的编码方式，许多行代码简化成了一行，原来是Java8的特性Lambda和Stream,结合代码和网上查资料学习了一下，并将相关的的知识做了下总结.</p><h2 id="lambda表达式"><a href="#lambda表达式" class="headerlink" title="lambda表达式"></a>lambda表达式</h2><p>lambda简单的理解就是一个匿名方法，一段带有输入参数的可执行语句块.</p><ul><li>语法：（）-&gt; {}   (小括号里是参数，大括号里是方法体)</li><li>特点：<pre><code>1.参数类型可以省略，编译器可以从上下文环境中推断出来2.当lambda表达式的参数个数只有一个的时候，小括号可以省略3.当lambda表达式只包含一条语句时，可以省略大括号，return，语句结尾的分号4.lambda表达式可以访问外部变量，但是要求这个变量不可变（final修饰）</code></pre></li><li>方法引用：<pre><code>1.类实例引用：   Person::getName2.类静态方法引用：Max::max </code></pre></li><li>构造器引用：<pre><code>Person::new（等同于 x-&gt;new Person(x)）</code></pre></li></ul><hr><h2 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h2><p>Stream（流）是一个来自数据源的元素队列并支持聚合操作。数据源一般是数组或集合等，进行聚合操作可以获取想要的结果。</p><ul><li>基本步骤：获取一个数据源（source）-&gt; 数据转化 -&gt; 执行操作获取想要的结果.(简单说，对 Stream 的使用就是实现一个 filter-map-reduce 过程，产生一个最终结果)</li><li>创建Stream<pre><code>1.Stream静态方法：Stream.of();2.Collection子类获取Stream（最常用）：list.Stream();</code></pre></li><li>Stream流操作<br>  *Intermediate（中间）: 一个流可以跟多个中间操作，主要是打开流对数据进行某种映射或过滤.<pre><code>常见操作:    map() - 对stream里的元素进行映射转化    filter() - 对Stream包含对元素按给定的条件过滤    distinct() - 对stream包含对元素进行去重    sorted() - 对stream包含对元素排序    peek() -  生成一个包含原Stream的所有元素的新Stream，同时会提供一个消费函数（Consumer实例），新Stream每个元素被消费的时候都会执行给定的消费函数        limit() - 对Stream里的元素取前n个    skip(n) - 对stream里的元素丢弃前n个，获取之后的元素    parallel() - 将一个顺序执行的流转变成一个并发的流（还有一种Collection.parallelStream()）    sequential() - 一个并行流转换成一个顺序流        unordered() - 实现无序流</code></pre></li><li>Terminal(终端): 一个流只能有一个终端操作，这是流对最后一个操作，用来处理结果数据。<pre><code>常见操作:     forEach() - 遍历结果数据（并行处理）    forEachOrdered - 遍历结果数据（顺序处理）    toArray（） - 将数据输入到数组中    reduce（） - 把 Stream 元素组合起来。它提供一个起始值（种子），然后依照运算规则（BinaryOperator），和前面 Stream 的第一个、第二个、第 n 个元素组合    collect（） - 实现了很多归约操作，例如将流转换成集合和聚合元素    count() - 获取stream里的元素个数    min() - 最小值    max() - 最大值    anyMatch() - Stream中是否存在任何一个元素满足匹配条件    allMatch() - 是不是Stream中的所有元素都满足给定的匹配条件    noneMatch() - 是不是Stream中的所有元素都不满足给定的匹配条件    findFirst() - 返回Stream中的第一个元素，如果Stream为空，返回空Optional    findAny() - 返回这个Stream中，取到的任何一个对象</code></pre></li><li>简单示例代码</li><li>七牛云大坑逼！！！！！<br><img src="https://github.com/geyou1995/geyou1995.github.io/blob/master/wallhave.n-664820.jpg?raw=true" alt=""><br><img src="http://pdufbfyi3.bkt.clouddn.com/test1.png" alt=""><br><img src="http://pdufbfyi3.bkt.clouddn.com/test2.png" alt=""><br><img src="http://pdufbfyi3.bkt.clouddn.com/test3.1.png" alt=""><br><img src="http://pdufbfyi3.bkt.clouddn.com/test3.2.png" alt=""><blockquote><p>参考：<a href="https://yuque.antfin-inc.com/mdc/doc/rhihn7" target="_blank" rel="noopener">https://yuque.antfin-inc.com/mdc/doc/rhihn7</a></p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac系统Idea常用快捷键</title>
    <link href="http://yoursite.com/2018/09/09/Mac%E7%B3%BB%E7%BB%9F%E4%B8%8BIdea%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2018/09/09/Mac系统下Idea快捷键/</id>
    <published>2018-09-09T02:24:45.000Z</published>
    <updated>2018-09-09T02:24:13.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前一直使用的Java编译工具是eclipse,进新公司之后,公司配了一台Mac并且后端都用IntelliJ IDEA开发,不能脱离团队呀,果断入手了IDEA,不得不说比eclipse更加的智能好用,为了提高开发效率，所以决定整理一下IDEA的常用快捷键,不想每次都配,所以就决定用IDEA默认的快捷键,用的是Mac OS X 10.5+ 但是Mac系统中与IDEA的快捷键有些冲突,可以把Mac相关冲突的快捷键更改或取消掉.下面整理了平常开发中常用的快捷键，以便于更好的记忆和熟练使用.</p><h2 id="Mac键盘符号和修饰健说明"><a href="#Mac键盘符号和修饰健说明" class="headerlink" title="Mac键盘符号和修饰健说明"></a>Mac键盘符号和修饰健说明</h2><p>⌘ Command<br>⇧ Shift<br>⌥ Option<br>⌃ Control<br>↩︎ Return/Enter<br>⌫ Delete<br>⌦ 向前删除键（Fn+Delete）<br>↑ 上箭头<br>↓ 下箭头<br>← 左箭头<br>→ 右箭头<br>⇞ Page Up（Fn+↑）<br>⇟ Page Down（Fn+↓）<br>Home Fn + ←<br>End Fn + →<br>⇥ 右制表符（Tab键）<br>⇤ 左制表符（Shift+Tab）<br>⎋ Escape (Esc)</p><h2 id="Editing编辑"><a href="#Editing编辑" class="headerlink" title="Editing编辑"></a>Editing编辑</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Control+Space 基本的代码补全(补全任何类,方法,变量) 注意这里与Mac系统的输入法快捷键冲突</span><br><span class="line">Control+Shift+Space 智能代码补全 (过滤器方法列表和变量的预期类型）</span><br><span class="line">Command+Shift+Enter 自动结束代码,行末添加分号</span><br><span class="line">Command+P  显示方法的参数</span><br><span class="line">Control+J  快速显示文档</span><br><span class="line">Command+鼠标放在代码上  显示代码简要信息</span><br><span class="line">Command+N  生成代码（getter、setter、构造函数、hashCode/equals,toString,实现接口方法）这个还有其他快捷键我只记这一种了</span><br><span class="line">Control+O  覆盖方法(重写父类方法)</span><br><span class="line">Control+I  实现接口方法(我直接记Command+N,也能实现接口方法)</span><br><span class="line">Command+Option+T 包围代码(try catch,if else,do while等)</span><br><span class="line">Command+/ 行注释代码(再按一次就是取消注释)</span><br><span class="line">Command+Option+/ 块注释</span><br><span class="line">Option+方向上  连续选中代码块</span><br><span class="line">Option+方向下  减少选中的代码块</span><br><span class="line">Control+Shift+Q 显示上下文信息</span><br><span class="line">Option+Enter  显示意向动作和快速修复代码</span><br><span class="line">Command+Option+L 格式化代码</span><br><span class="line">Control+Option+O 优化import</span><br><span class="line">Tab  缩进代码</span><br><span class="line">Command+C 复制</span><br><span class="line">Command+V 粘贴</span><br><span class="line">Command+X 剪切</span><br><span class="line">Command+D 复制当前行或选定的块</span><br><span class="line">Command+Delete 删除当前行或选定的行的块</span><br><span class="line">Control+Shift+J 智能的将代码拼接成一行</span><br><span class="line">Command+Enter 智能的拆分拼接的行</span><br><span class="line">Command+加号/减号 展开/折叠代码块</span><br><span class="line">Command+Shift+加号/减号 展开/折叠所有代码块</span><br><span class="line">Command+W 关闭活动的编辑器选项</span><br><span class="line">Command+Shift+上下  上下移动代码</span><br></pre></td></tr></table></figure><h2 id="Search-Replace（查询-替换"><a href="#Search-Replace（查询-替换" class="headerlink" title="Search/Replace（查询/替换)"></a>Search/Replace（查询/替换)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Command+F 文件内查找</span><br><span class="line">Command+Shift+F 全局查找</span><br><span class="line">Command+G 查找模式下向下查找</span><br><span class="line">Command+Shift+G 查找模式下向上查找</span><br></pre></td></tr></table></figure><h2 id="Usage-Search（使用查询）"><a href="#Usage-Search（使用查询）" class="headerlink" title="Usage Search（使用查询）"></a>Usage Search（使用查询）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Option+F7 在文件中查找用到的地方</span><br><span class="line">Command+F7 在类中查找用到的地方</span><br><span class="line">Command+Shift+F7 在类中显示(颜色标记)用到的地方</span><br><span class="line">Command+Option+F7 显示用法</span><br></pre></td></tr></table></figure><h2 id="Compile-and-Run（编译和运行）"><a href="#Compile-and-Run（编译和运行）" class="headerlink" title="Compile and Run（编译和运行）"></a>Compile and Run（编译和运行）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Command+F9 编译Project</span><br><span class="line">Command+Shift+F9 编译选择的文件,包或模块</span><br><span class="line">Control+Option+R 弹出Run的可选菜单</span><br><span class="line">Control+Option+R 弹出Debug的可选菜单</span><br><span class="line">Control+D 调试</span><br></pre></td></tr></table></figure><h2 id="Debug调试"><a href="#Debug调试" class="headerlink" title="Debug调试"></a>Debug调试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">F8 进入下一步,不进入当前方法内</span><br><span class="line">F7 进入下一步,如果当前断点式方法,则进入方法内</span><br><span class="line">Shift+F8 跳出</span><br><span class="line">Option+F9 运行到光标停留处</span><br><span class="line">F9 放开debug </span><br><span class="line">Command+Shift+F8 查看断点信息</span><br></pre></td></tr></table></figure><h2 id="Navigation（导航）"><a href="#Navigation（导航）" class="headerlink" title="Navigation（导航）"></a>Navigation（导航）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Shift+Shift 查找文件</span><br><span class="line">Command+L 跳转行</span><br><span class="line">Command+E 显示最近打开的文件记录列表</span><br><span class="line">Command+Option+方向键左/右  退回/前进到上一个操作的地方</span><br><span class="line">Command+B 或Command+鼠标左键  进入方法或变量的接口或是定义处</span><br><span class="line">Command+Option+B 越过接口,直接跳掉实现处</span><br></pre></td></tr></table></figure><h2 id="Refactoring（重构）"><a href="#Refactoring（重构）" class="headerlink" title="Refactoring（重构）"></a>Refactoring（重构）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F5 复制文件到指定目录</span><br><span class="line">Command+delete 在文件上安全删除文件,弹出确认框</span><br><span class="line">Shift+F6 重命名文件</span><br><span class="line">Command+Option+M 将选中的代码提取为方法</span><br></pre></td></tr></table></figure><h2 id="General（通用）"><a href="#General（通用）" class="headerlink" title="General（通用）"></a>General（通用）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Command+, 打开idea系统设置</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>brave heart</title>
    <link href="http://yoursite.com/2018/08/18/%E6%88%91%E5%B0%B1%E6%98%AF%E5%86%99%E7%9D%80%E7%8E%A9%E7%8E%A9%E7%9A%84/"/>
    <id>http://yoursite.com/2018/08/18/我就是写着玩玩的/</id>
    <published>2018-08-18T15:12:45.000Z</published>
    <updated>2018-09-06T14:14:34.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><center>不论是谁 都有想去逃避的时候</center><br><center>只要在那一刻发挥出潜藏的那种力量 便可以清除前路上的障碍</center><br><center>让这个蓝色星球 继续闪耀着光芒</center><br><center>这一定是只有你才能做到的事情</center><center>紧紧抓住 你所拥有的梦想</center><br><center>守护着 你重要的朋友</center><br><center>使自己变得更坚强</center><br><center>潜在的未知力量</center><center>像火焰那般被点燃</center><br><center>你的所有愿望 绝非南柯一梦</center><br><center>都一定可以实现</center><br><center>天空绝不会天天放晴</center><center>所以当寒冷的雨滴下落时 便撑起雨伞吧</center><br><center>生活是没有地图可以指引的 所以我们是自由的</center><br><center>随心所欲 即管前往任何地方</center><br><center>所以冲刺吧!! 用比风还要快的速度</center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="心情" scheme="http://yoursite.com/categories/%E5%BF%83%E6%83%85/"/>
    
    
      <category term="song" scheme="http://yoursite.com/tags/song/"/>
    
  </entry>
  
</feed>
